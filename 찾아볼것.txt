stacktaskintent 사용되는 이유는? 활용 방안은?

내 문제와 동일한 질문
-> https://stackoverflow.com/questions/68452843/how-to-close-notification-panel-without-accessibilityservice-in-android-12 // android 12 질문
-> https://stackoverflow.com/questions/18261969/clicking-android-notification-actions-does-not-close-notification-drawer
임시 방편으로 
context.sendBroadcast(new Intent(Intent.ACTION_CLOSE_SYSTEM_DIALOGS)); 를 호출해서 해결 했지만 안드로이드12 버전 이상부터는 정책의 변경으로 인해서 작동하지 않기
때문에 다른 방법을 찾아야 한다.


참고자료
-> https://stackoverflow.com/questions/36912325/why-do-we-use-the-taskstackbuilder

특이한 것
-> https://medium.com/android-news/full-screen-intent-notifications-android-85ea2f5b5dc1

원했던 상황
-> 고정된 알림창에서 아이콘을 클릭하면 특정 액티비티로 이동하는 기능이 구현되어 있다. 그런데 고정형 알림창이기 때문에 앱이 켜지면서 화면이 나타나지만
알림창 drawer 가 위로 올라가지 않는 문제가 있다. 이것을 위해서 action_close_system_dialogs 라는 인텐트를 넘겨 주려 했는데 2개의 인텐트 이벤트를
수행 시키는 것을 taskstackbuilder 를 활용 해서 작업해 보려 했던 것인데 동작방식은 원한 상황에 사용 되는 것이 아니였다.

변경사항이 존재
-> https://developer.android.com/about/versions/12/behavior-changes-all?hl=ko
action_close_system_dialogs 에 제한사항이 생겼다. 기대하는 작업이 안될 것 같음

해결
-> if (Build.VERSION.SDK_INT >= VERSION_CODES.S) {
            return PendingIntent.getActivity(context, requestCode, intent, flags | PendingIntent.FLAG_MUTABLE);
        } else {
            return PendingIntent.getActivity(context, requestCode, intent, flags);
        }

    알림창의 작업을 receiver 에서 처리해 생기는 문제였다. 이 작업을 위에처럼 리시버를 거쳐 작업 하는 것이아닌 바로 액티비티 호출로 실행하면 안드로이드 시스템에서 자동으로 알림 서랍을 올려준다.
    안드로이드 12 이상에서도 이런 방식을 사용하도록 권장하고 있는데 알림의 실행을 