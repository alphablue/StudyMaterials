자료 1) 날짜의 비교를 위한 dateFormat 활용 방법

https://www.techiedelight.com/ko/compare-two-dates-in-kotlin/

java의 패키지에 많이 종속적인 부분이 있는데 java.util.Date 패키지와 java.util.Calendar 패키지는 레거시 코드에 사용되며
윤년의 고려가 되지 않기 때문에 사용하는데 권장하지 않는 방법이다.

대신에 sdk 26버전 이상부터 java.time 패키지를 사용하기를 권장하고 있어 그것을 활용한 날짜 계산을 사용하면 좋을 것으로 생각된다.
참고 ) https://stackoverflow.com/questions/38967422/calculate-age-from-birthdate


참고 ) min sdk 가 26보다 작을 때 stackoverflow 의 내용
    https://stackoverflow.com/questions/47006254/how-to-get-current-local-date-and-time-in-kotlin




 세부 문제 ) 날짜를 문자열로된 "20201122" 의 형태로 받아서 현재 날짜와 계산을 통해 만 나이를 알아보는 문제였다.
 
 time 패키지는 LocalDate 객체를 사용하기를 권장하고 있어 이를 위해 DateTimeFormatter 를 활용해 받아왔다. 

 val formatter = DateTimeFormatter.ofPattern("yyyyMMdd")
        val today: LocalDate = LocalDate.now()
        val date: LocalDate = LocalDate.parse("20201122",formatter)
        println(date)
        println(today)

        println(Period.between(
            date,
            today
        ))

위의 코드처럼 간단하게 지정한 날짜와 형태를 넣어주고 현재 날짜를 받아 비교 할 수 있다.

참고 ) LocalDate 를 활용한 기준 날짜의 전후 비교 하는 것
https://www.techiedelight.com/ko/compare-two-dates-in-kotlin/

참고 ) 레거시 코드를 위해 date 패키지와 Calendar 패키지를 활용 하는 것

참고 ) dateFormatter Pattern 정보
https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html

추가)
-> 두 날짜의 비교를 진행하고 싶은데 sdk 별로 하는 방법이 다름 day의 갯수를 세고 싶은 방법

if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
        val formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd")
        val timeNow = LocalDate.now()
        val inputDay = LocalDate.parse(date, formatter)

        return ChronoUnit.DAYS.between(inputDay, timeNow)
    } else {

        // sdk O 보다 낮은 경우

        val formatter = SimpleDateFormat("yyyy-MM-dd", Locale.KOREA)
        val today = Calendar.getInstance()

        // string 으로 바꾼거를 다시 date 객체로 바꾼것
        val parsedToday = formatter.format(today.time)
            .let {
                formatter.parse(it)
            }
        val ff = formatter.parse("2021-10-01")
        val diff = parsedToday.time - ff.time

        return (diff / (1000*60*60*24))
    }