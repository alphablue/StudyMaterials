개요
-> 앱에서 기본앱 이나 외부 앱을 활용 하기위해서는 intent 를 활용해야 하는 경우가 있는데 워낙 다양한 intent 들이 있으니
각 intent 옵션별 작동을 기록 하려 함

activity.startActivity(intent) 로 실행하면됨

기본 전화)
->
Intent(Intent.ACTION_DIAL, Uri.parse("tel:010-1343-4646")) 전화 번호가 입력된 화면으로 이동함
Intent(Intent.ACTION_CALL_BUTTON, Uri.parse("tel:100-1131-4564")) 입력된 전화번호로 바로 전화가 됨
--> 이 경우에는 permission 을 설정 해줘야된다.
<uses-permission android:name="android.permission.CALL_PHONE"/> 를 요구하며 체크도 필요함, 가능하면 ACTION_DIAL 를 쓰는게
좋아보인다.


공유 기능)
->
val intent = Intent(Intent.ACTION_SEND).apply {
                        type = "text/plain"
                        putExtra(Intent.EXTRA_SUBJECT, "소제목")
                        putExtra(Intent.EXTRA_TEXT, "주요내용")
                    }

val sendIntent = Intent.createChooser(intent, "제목")
activity.startActivity(sendIntent)
::=> 공유 기능을 활용하기 위해 쓰는 것이다. 소제목은 본문을 시작 하기 전에 제목으로 나오는 부분이고 본문 내용은 주요 텍스트들이
나오는 것이다. 
제목 부분은 공유할 앱을 선택할 때 나오는 제목임 공유되는 텍스트에는 포함되지 않음

참고)
-> https://negoguma.tistory.com/13


문제
-> PendingIntent 의 flag 별 의미 확인

FLAG_UPDATE_CURRENT : Pending인텐트가 이미 존재할 경우, Extra Data를 모두 대체
FLAG_CANCEL_CURRENT : Pending인텐트가 이미 존재할 경우, 기존 Pending인텐트를 cancel하고 다시 생성
FLAG_IMMUTABLE : 이름에서 알 수 있듯이, 기존 PendingIntent 는 변경되지 않구요, 새로 데이터를 추가한 PendingIntent를 보내도 무시함
FLAG_NO_CREATE: Pending인텐트가 기존에 존재하지 않으면, Null을 return
FLAG_ONE_SHOT : 이름이 아주 직관적인데요, 한번만 사용할 수 있는 PendingIntent란 뜻 임

참고
-> https://minchanyoun.tistory.com/m/117


문제
-> 기본 문자 앱 실행하기 , 일반적인 사용으로는 메신저 앱 실행시 뜨는 휴대폰 목록이 뜨는게 아니라 메신저 보내기 화면이 뜸

해결)
->

1. 기본패키지를 가져와 패키지자체를 실행 시키도록 하는 방법이 있음

val defaultSms = Telephony.Sms.getDefaultSmsPackage(requireContext())
val intentSms = requireContext().packageManager.getLaunchIntentForPackage(defaultSms)  // 기본 패키지를 가져오는 부분
    ?: Intent(Intent.CATEGORY_DEFAULT).apply { addCategory(Intent.CATEGORY_APP_MESSAGING) } // 일반적인 실행 방법

if(intentSms.resolveActivity(requireContext().packageManager) != null) {
    startActivity(intentSms)
} else {
    Toast.makeText(requireContext(), "사용 가능한 메신저 앱이 없습니다.", Toast.LENGTH_LONG).show()
}

위에 처럼 처리하면 가능하다. 기본 패키지를 가져왔고 패키지를 토대로 실행하도록 함

참조)
https://developer.android.com/guide/components/intents-common#Messaging
https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=newyorkinms&logNo=220373497960
https://stackoverflow.com/questions/37111922/how-to-open-sms-app-via-implicit-intent


