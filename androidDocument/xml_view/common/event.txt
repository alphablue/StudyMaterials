문제
-> 사용자가 빠르게 클릭을 한다면 같은 이벤트를 클릭수 만큼 호출하는 문제가 있다. 이를 방지하기 위해서 클릭이벤트를 받는 것에 대한 딜레이를 줄 필요가 있음

해결
->
@BindingAdapter("singleClick")
fun View.setSingleClick(doClick: () -> Unit) =
    setOnClickListener(
        DebouncingOnClickListener( 
            intervalMillis = 5000, //5ms delay for click event
            doClick = doClick
        )
    )


문제
-> xml 상에서 databinding을 활용해 이벤트를 넘기고 싶은데 방법은?

해결
-> 뷰모델의 함수의 이동이 가능함
viewModel::function

으로 xml 상에서 주고 받을 수 있다.

// 파라미터가 1개인 경우
<import type="kotlin.jvm.functions.Function0" />

<import type="kotlin.Unit" />

<variable
    name="action"
    type="Function0&lt;Unit>" />

...
android:onClick="@{() -> action.invoke()}"
...

// 파라미터가 많은 경우
<import type="kotlin.jvm.functions.Function2" />

<import type="kotlin.Unit" />

<variable
    name="action"
    type="Function2&lt;Integer, String, Unit>"/>


참조)
https://stackoverflow.com/questions/63786530/with-data-binding-how-to-pass-functionor-lambda-variable-to-included-layout