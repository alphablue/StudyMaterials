문제 1.
-> firebase 연결을 위해 cli 를 설치했지만 flutterfire 명령어를 인식 하지 못함

해결)
-> 공식 문서에 나와 있는 부분을 확인해 활용 했음

https://firebase.google.com/docs/cli
https://firebase.flutter.dev/docs/cli/


문제 2.
-> Di 를 사용하여 싱글턴 객체를 사용 하는 방법

해결)
-> pubspec.yaml 에서 dev_dependencies: 목록에 get: 을 추가해주고 제공하는 함수를 활용 하면된다.

DataUploader controller = Get.put(DataUploader()) 처럼 Get 클래스에서 함수를 제공해 주고 있다.

문제 3.
-> CLI 에서 firebase dependencies 추가하기

https://firebase.google.com/docs/flutter/setup?hl=ko&platform=ios

에서 확인 하듯이
터미널에서
flutter pub add {파이어베이스제공 플러그인} 를 하면 된다.

문제 4.
-> 안드로이드의 mainfest 설정이 문제가되어 multidex 에러를 냄, firestore 를 쓰려고 보니 min sdk 를 19 이상을 요구해 바꿨더니 문제가 됨

해결)
-> 최소 sdk 버전을 19 이상으로 할 경우 multidex 를 따로 설정해줘야 하는데 23 이상으로 설정할 경우 자동으로 설정해 주기 때문에 sdk를 23 이상
으로 설정 했음
현재도 보통 min sdk 가 23 이상이기 때문에 크게 문제되지 않는 부분이라 생각됨


문제 5.
-> firebase 초기화가 안됐다는 오류가 발생함
에러 내용 -> [DEFAULT]' has been created - call Firebase.initializeApp() in Flutter and Firebase'

해결)
-> https://stackoverflow.com/questions/63492211/no-firebase-app-default-has-been-created-call-firebase-initializeapp-in

플러터에서 firebase 버전이 0.5.0 이상을 사용한다면 초기화를 해 줘야 한다. 가장 편리한 방법은
WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp();
를 실행 해 주는 것인데 이번 프로젝트에서는 getx 를 활용해 DI 를 하기 때문에 firebase 를 사용하는 부분에서 초기화를 진행 했다.

class DataUploader extends GetxController {
  @override
  void onReady() {
    uploadData();
    super.onReady();
  }

  Future<void> uploadData() async {
    WidgetsFlutterBinding.ensureInitialized();
    await Firebase.initializeApp();

    ...
  }
}

아래 코드처럼 활용 했다.

문제 6.
-> 문제 5를 해결 하고보니 또 android gradle 에서 에러가 발생했다. 파이어 베이스를 활용한다는 종속성을 추가 해 줄 필요가 있음
에러 코드 -> PlatformException (PlatformException(null-error, Host platform returned null value for non-null return value., null, null))

해결)
-> https://stackoverflow.com/questions/72895721/firebasecloudmessaging-platformexception-platformexceptionnull-error-host-p

위의 링크에 나온데로 각 gradle 에 googleservice 와 firebase 종속성을 추가 해 주었다.