>>>> 1 <<<<<

1) 먼저 한 것은 retrofit 등의 외부 라이브러리 객체의 의존성 주입이다.
강의에서는 koin을 쓰는데 hilt로 적용해 보기위해서 강의에서 의도한 바에 맞춰 DI를 하기 위해서는 객 빌더들을 Object에 묶어서 @provide하는 것이
한 방법이라 생각해 진행했다.

아래의 코드를 보자.

@Module
@InstallIn(MainActivity::class)
object ProvideAPI {

    @Provides
    fun provideRetrofit(
        okHttpClient: OkHttpClient,
        gsonConverterFactory: GsonConverterFactory
    ): Retrofit {
        return Retrofit.Builder()
            .baseUrl("")
            .addConverterFactory(gsonConverterFactory)
            .client(okHttpClient)
            .build()
    }

    @Provides
    fun provideGsonConvertFactory(): GsonConverterFactory {
        return GsonConverterFactory.create()
    }

    @Provides
    fun buildOkHttpClient(): OkHttpClient {
        val interceptor = HttpLoggingInterceptor()
        if (BuildConfig.DEBUG) {
            interceptor.level = HttpLoggingInterceptor.Level.BODY
        } else {
            interceptor.level = HttpLoggingInterceptor.Level.NONE
        }

        return OkHttpClient.Builder()
            .connectTimeout(5, TimeUnit.SECONDS)
            .addInterceptor(interceptor)
            .build()
    }
}

 문제1. 아이콘을 적용하려고 material3를 사용하려 했는데 material 공식 문서와 안드로이드에서 지원하는 버전이 달랐음이거는 realease 노트에서 확인가능
 해결 -> https://developer.android.com/jetpack/androidx/releases/compose-material 참고
 해결 -> 새로운 3 버전을 사용할까 했지만 2도 제대로 이해하지 못한 상황에 쓰는것 변화를 익히는데 어려움이 있을 것으로 생각되기 때문에 2를 사용하기로 함

 문제2. hilt를 사용 하려 했는데 ComponentProcessingStep was unable to process '*Application_HiltComponents.SingletonC' 에러가 발생
 해결 -> https://github.com/google/dagger/issues/3257 의 내용의 도움으로 gradle의 의존성을 삭제하니 실행됨
 어떤 차이가 있는 건지는 모르겠으나 실행되는것에 중점을 둠

2) 의문점이 있음 bottomNav를 작성하는 중에 var selectedScreen by remember { mutableStateOf(0) } 를 작성하고 각 아이템을 클릭하면 다른 조작 없이 내부 정보가 변화됨
0, 1, 2 의 순으로 데이터가 변경되는데 이유를 잘 모르겠음

3) navigation 에서 백스택을 제거하는 방법 (단 하나의 stack만 남기고 싶을 때 사용하면 좋음)
해결 -> https://stackoverflow.com/questions/66845899/compose-navigation-remove-previous-composable-from-stack-before-navigating