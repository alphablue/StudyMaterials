>>>> 1 <<<<<

1) 먼저 한 것은 retrofit 등의 외부 라이브러리 객체의 의존성 주입이다.
강의에서는 koin을 쓰는데 hilt로 적용해 보기위해서 강의에서 의도한 바에 맞춰 DI를 하기 위해서는 객 빌더들을 Object에 묶어서 @provide하는 것이
한 방법이라 생각해 진행했다.

아래의 코드를 보자.

@Module
@InstallIn(MainActivity::class)
object ProvideAPI {

    @Provides
    fun provideRetrofit(
        okHttpClient: OkHttpClient,
        gsonConverterFactory: GsonConverterFactory
    ): Retrofit {
        return Retrofit.Builder()
            .baseUrl("")
            .addConverterFactory(gsonConverterFactory)
            .client(okHttpClient)
            .build()
    }

    @Provides
    fun provideGsonConvertFactory(): GsonConverterFactory {
        return GsonConverterFactory.create()
    }

    @Provides
    fun buildOkHttpClient(): OkHttpClient {
        val interceptor = HttpLoggingInterceptor()
        if (BuildConfig.DEBUG) {
            interceptor.level = HttpLoggingInterceptor.Level.BODY
        } else {
            interceptor.level = HttpLoggingInterceptor.Level.NONE
        }

        return OkHttpClient.Builder()
            .connectTimeout(5, TimeUnit.SECONDS)
            .addInterceptor(interceptor)
            .build()
    }
}

 문제1. 아이콘을 적용하려고 material3를 사용하려 했는데 material 공식 문서와 안드로이드에서 지원하는 버전이 달랐음이거는 realease 노트에서 확인가능
 해결 -> https://developer.android.com/jetpack/androidx/releases/compose-material 참고
 해결 -> 새로운 3 버전을 사용할까 했지만 2도 제대로 이해하지 못한 상황에 쓰는것 변화를 익히는데 어려움이 있을 것으로 생각되기 때문에 2를 사용하기로 함

 문제2. hilt를 사용 하려 했는데 ComponentProcessingStep was unable to process '*Application_HiltComponents.SingletonC' 에러가 발생
 해결 -> https://github.com/google/dagger/issues/3257 의 내용의 도움으로 gradle의 의존성을 삭제하니 실행됨
 어떤 차이가 있는 건지는 모르겠으나 실행되는것에 중점을 둠

2) 의문점이 있음 bottomNav를 작성하는 중에 var selectedScreen by remember { mutableStateOf(0) } 를 작성하고 각 아이템을 클릭하면 다른 조작 없이 내부 정보가 변화됨
0, 1, 2 의 순으로 데이터가 변경되는데 이유를 잘 모르겠음

3) navigation 에서 백스택을 제거하는 방법 (단 하나의 stack만 남기고 싶을 때 사용하면 좋음)
해결 -> https://stackoverflow.com/questions/66845899/compose-navigation-remove-previous-composable-from-stack-before-navigating


>>> day 2 <<<

 문제 1. koin 의존성을 gradle에 추가하려 보니 강의의 코드가 안되는 문제.
 해결 -> https://insert-koin.io/docs/3.1/setup/v2/
 사이트에서 알려주는 가이드로 버전 2.2.3의 내용으로 사용하도록 함, 동영상 코드를 그대로 하면 작동이 안되고 코인에서 알려주는 가이드 지침을 따라야 함.
 코드
 implementation "io.insert-koin:koin-core:$koin_version"
    implementation "io.insert-koin:koin-core-ext:$koin_version"
    implementation "io.insert-koin:koin-androidx-scope:$koin_version"
    implementation "io.insert-koin:koin-androidx-viewmodel:$koin_version"
    implementation "io.insert-koin:koin-androidx-fragment:$koin_version"
    implementation "io.insert-koin:koin-androidx-ext:$koin_version"

문제 2. koin di등록시에 viewModel의 koin 함수가 많아서 뭘 해야할지 모름
해결 -> import org.koin.androidx.viewmodel.dsl.viewModel 이 패키지에 있는 viewModel을 등록하자

문제 3. 동영상 강의 7번까지 진행했는데 화면이 안보이는 문제

참조 1) findFragmentByTag()의 의미를 몰라서 id랑 차이가 무엇인지 찾아봤음
 -> https://stackoverflow.com/questions/43520688/findfragmentbyid-and-findfragmentbytag
해결? -> baseFragment 에서 return super.onCreateView(inflater, container, savedInstanceState) 랑 retrun binding.root가 같이 있었음 하나만 return 해야하는데 잘못된 결과를 보내고 있었음

다른문제 -> org.koin.android.error.MissingAndroidContextException: Can't resolve Application instance.' 에러가 발생
이건 startKoin에서 application을 추가 안해줘서 생긴 문제, 
startKoin {
            androidContext(this@Part6Chapter01Application)
            modules(appModule)
        }
을 해줘야함

 문제 4. compose로 변환을 위해 작업 하던중 mock 데이터를 io thread로 작업하려고 하니 hilt로 inject을 해줘야 하는 문제가 생김
 해결 -> 굉장히 좋은 글을 보고 실행해봤음
 https://medium.com/androiddevelopers/create-an-application-coroutinescope-using-hilt-dd444e721528
 https://keelim.tistory.com/321 << bind 에대 한 고찰?




